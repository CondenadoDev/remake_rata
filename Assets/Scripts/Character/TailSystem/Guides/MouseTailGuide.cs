using UnityEngine;

/// <summary>
/// GU√çA SIMPLE DE IMPLEMENTACI√ìN DE COLA DE RAT√ìN
/// 
/// PASO 1: A√±adir este script (AutoMouseTailSetup) al GameObject que contiene la cola
/// PASO 2: Ejecutar el juego - TODO se configura autom√°ticamente
/// PASO 3: (Opcional) Ajustar el estilo de movimiento en el inspector
/// 
/// ¬°ESO ES TODO! La cola se optimizar√° sola y se comportar√° como la de un rat√≥n real.
/// </summary>

[System.Serializable]
public class MouseTailGuide : MonoBehaviour
{
    [Header("üìã INSTRUCCIONES DE USO")]
    [TextArea(10, 15)]
    public string instructions = 
        "üê≠ COLA DE RAT√ìN - CONFIGURACI√ìN AUTOM√ÅTICA\n\n" +
        "‚úÖ PASO 1: Aseg√∫rate de que este script est√© en el GameObject de la cola\n" +
        "‚úÖ PASO 2: Ejecuta el juego - se configura autom√°ticamente\n" +
        "‚úÖ PASO 3: ¬°Disfruta de tu cola realista!\n\n" +
        "üéõÔ∏è CONFIGURACIONES OPCIONALES:\n" +
        "‚Ä¢ Movement Style: Autom√°tico detecta la velocidad del rat√≥n\n" +
        "‚Ä¢ Slow: Para ratones lentos/pesados\n" +
        "‚Ä¢ Normal: Comportamiento est√°ndar\n" +
        "‚Ä¢ Fast: Para ratones √°giles/r√°pidos\n\n" +
        "üîß COMANDOS √öTILES (Click derecho en el componente):\n" +
        "‚Ä¢ 'Reconfigurar Autom√°ticamente': Vuelve a optimizar todo\n" +
        "‚Ä¢ 'Mostrar Estado Completo': Ver informaci√≥n de diagn√≥stico\n\n" +
        "‚ùì SOLUCI√ìN DE PROBLEMAS:\n" +
        "‚Ä¢ Si la cola no aparece: Verifica que 'BASECOLA' exista\n" +
        "‚Ä¢ Si se estira: El sistema se auto-corrige autom√°ticamente\n" +
        "‚Ä¢ Si no se mueve: Verifica que el personaje tenga Rigidbody\n\n" +
        "üéØ RESULTADO ESPERADO:\n" +
        "‚Ä¢ Cola que siempre va hacia atr√°s del personaje\n" +
        "‚Ä¢ Movimiento natural y fluido como un rat√≥n real\n" +
        "‚Ä¢ Auto-optimizaci√≥n sin intervenci√≥n manual\n" +
        "‚Ä¢ Adaptaci√≥n autom√°tica al estilo de movimiento";

    [Header("üéØ Estado Actual")]
    [SerializeField] private bool isConfigured = false;
    [SerializeField] private string currentStatus = "Esperando configuraci√≥n...";
    
    private AutoMouseTailSetup autoSetup;

    void Start()
    {
        // Verificar si AutoMouseTailSetup est√° presente
        autoSetup = GetComponent<AutoMouseTailSetup>();
        
        if (autoSetup == null)
        {
            Debug.LogWarning("‚ö†Ô∏è AutoMouseTailSetup no encontrado. A√±adi√©ndolo autom√°ticamente...");
            autoSetup = gameObject.AddComponent<AutoMouseTailSetup>();
        }
        
        UpdateStatus();
    }

    void UpdateStatus()
    {
        if (autoSetup != null)
        {
            currentStatus = "‚úÖ AutoMouseTailSetup detectado - Configuraci√≥n en progreso...";
            isConfigured = true;
        }
        else
        {
            currentStatus = "‚ùå Requiere AutoMouseTailSetup";
            isConfigured = false;
        }
    }

    [ContextMenu("üöÄ Configuraci√≥n R√°pida")]
    public void QuickSetup()
    {
        Debug.Log("üöÄ === CONFIGURACI√ìN R√ÅPIDA DE COLA DE RAT√ìN ===");
        
        // Verificar AutoMouseTailSetup
        if (autoSetup == null)
        {
            autoSetup = gameObject.AddComponent<AutoMouseTailSetup>();
            Debug.Log("‚ûï AutoMouseTailSetup a√±adido");
        }
        
        // Configurar para auto-setup
        autoSetup.autoSetupOnStart = true;
        autoSetup.movementStyle = MouseMovementStyle.Automatic;
        autoSetup.adaptiveReconfiguration = true;
        
        Debug.Log("‚úÖ Configuraci√≥n r√°pida completada");
        Debug.Log("üéÆ Ejecuta el juego para ver la cola en acci√≥n");
        
        UpdateStatus();
    }

    [ContextMenu("üìñ Mostrar Ayuda Completa")]
    public void ShowFullHelp()
    {
        Debug.Log("üìñ === AYUDA COMPLETA - COLA DE RAT√ìN ===");
        Debug.Log("");
        Debug.Log("üéØ OBJETIVO:");
        Debug.Log("   Crear una cola que se comporte como la de un rat√≥n real");
        Debug.Log("   - Siempre hacia atr√°s del personaje");
        Debug.Log("   - Movimiento natural y fluido");
        Debug.Log("   - Auto-optimizaci√≥n autom√°tica");
        Debug.Log("");
        Debug.Log("‚öôÔ∏è COMPONENTES INCLUIDOS:");
        Debug.Log("   ‚Ä¢ AutoMouseTailSetup: Configuraci√≥n autom√°tica principal");
        Debug.Log("   ‚Ä¢ RealisticMouseTail: Comportamiento natural de rat√≥n");
        Debug.Log("   ‚Ä¢ TailPhysicsSetup: F√≠sica b√°sica de la cola");
        Debug.Log("   ‚Ä¢ TailStretchPreventer: Previene estiramiento excesivo");
        Debug.Log("   ‚Ä¢ TailJointStabilizer: Estabiliza las conexiones");
        Debug.Log("");
        Debug.Log("üîß CONFIGURACI√ìN:");
        Debug.Log("   1. A√±ade AutoMouseTailSetup a tu GameObject de cola");
        Debug.Log("   2. Ejecuta el juego");
        Debug.Log("   3. ¬°Todo se configura autom√°ticamente!");
        Debug.Log("");
        Debug.Log("üéõÔ∏è ESTILOS DE MOVIMIENTO:");
        Debug.Log("   ‚Ä¢ Automatic: Detecta autom√°ticamente (recomendado)");
        Debug.Log("   ‚Ä¢ Slow: Rat√≥n lento (masa alta, movimiento pausado)");
        Debug.Log("   ‚Ä¢ Normal: Comportamiento est√°ndar");
        Debug.Log("   ‚Ä¢ Fast: Rat√≥n √°gil (masa baja, movimiento r√°pido)");
        Debug.Log("");
        Debug.Log("üêõ SOLUCI√ìN DE PROBLEMAS:");
        Debug.Log("   ‚Ä¢ Cola no aparece: Verifica jerarqu√≠a BASECOLA/Cola_X");
        Debug.Log("   ‚Ä¢ Se estira mucho: El sistema se auto-corrige");
        Debug.Log("   ‚Ä¢ No sigue al personaje: Verifica Rigidbody del personaje");
        Debug.Log("   ‚Ä¢ Muy r√≠gida/blanda: Cambia Movement Style");
        Debug.Log("");
        Debug.Log("üìû COMANDOS DE EMERGENCIA:");
        Debug.Log("   ‚Ä¢ 'Configuraci√≥n R√°pida': Configura todo autom√°ticamente");
        Debug.Log("   ‚Ä¢ 'Reconfigurar Autom√°ticamente': Vuelve a optimizar");
        Debug.Log("   ‚Ä¢ 'Mostrar Estado Completo': Diagn√≥stico completo");
    }

    [ContextMenu("üîç Verificar Requisitos")]
    public void CheckRequirements()
    {
        Debug.Log("üîç === VERIFICANDO REQUISITOS ===");
        
        bool allGood = true;
        
        // Verificar jerarqu√≠a de cola
        Transform baseCola = transform.Find("BASECOLA");
        if (baseCola != null)
        {
            Debug.Log("‚úÖ BASECOLA encontrado");
            
            // Verificar huesos de cola
            int boneCount = 0;
            for (int i = 1; i <= 8; i++)
            {
                if (FindBoneRecursive(baseCola, $"Cola_{i}") != null)
                    boneCount++;
            }
            
            Debug.Log($"‚úÖ {boneCount} huesos de cola encontrados");
        }
        else
        {
            Debug.LogWarning("‚ùå BASECOLA no encontrado en la jerarqu√≠a");
            allGood = false;
        }
        
        // Verificar personaje
        Transform character = transform.parent;
        if (character != null)
        {
            Rigidbody rb = character.GetComponent<Rigidbody>();
            if (rb != null)
            {
                Debug.Log($"‚úÖ Rigidbody del personaje encontrado (Kinematic: {rb.isKinematic})");
            }
            else
            {
                Debug.LogWarning("‚ö†Ô∏è No se encontr√≥ Rigidbody en el personaje");
            }
        }
        
        // Verificar AutoMouseTailSetup
        if (autoSetup != null)
        {
            Debug.Log("‚úÖ AutoMouseTailSetup presente");
        }
        else
        {
            Debug.LogWarning("‚ùå AutoMouseTailSetup no encontrado");
            allGood = false;
        }
        
        if (allGood)
        {
            Debug.Log("üéâ ¬°Todos los requisitos cumplidos! Ejecuta el juego para ver la cola en acci√≥n.");
        }
        else
        {
            Debug.Log("‚ö†Ô∏è Algunos requisitos no se cumplen. Usa 'Configuraci√≥n R√°pida' para corregirlos.");
        }
    }

    Transform FindBoneRecursive(Transform parent, string boneName)
    {
        if (parent.name == boneName)
            return parent;

        for (int i = 0; i < parent.childCount; i++)
        {
            Transform result = FindBoneRecursive(parent.GetChild(i), boneName);
            if (result != null)
                return result;
        }

        return null;
    }

    void OnValidate()
    {
        UpdateStatus();
    }
}

/*
===============================================
üê≠ RESUMEN PARA EL USUARIO
===============================================

IMPLEMENTACI√ìN S√öPER SIMPLE:

1. üìÅ A√±ade el script "AutoMouseTailSetup" a tu GameObject de cola
2. ‚ñ∂Ô∏è Ejecuta el juego  
3. üéâ ¬°La cola se comporta como la de un rat√≥n real!

CARACTER√çSTICAS AUTOM√ÅTICAS:
‚úÖ Siempre va hacia atr√°s del personaje
‚úÖ Movimiento natural y fluido
‚úÖ Se adapta autom√°ticamente al estilo de movimiento
‚úÖ Previene estiramiento excesivo
‚úÖ Optimizaci√≥n autom√°tica de f√≠sica
‚úÖ No requiere configuraci√≥n manual

ESTILOS DE MOVIMIENTO:
üîÑ Automatic: Detecta autom√°ticamente (RECOMENDADO)
üêå Slow: Para ratones lentos/pesados  
üê≠ Normal: Comportamiento est√°ndar
‚ö° Fast: Para ratones √°giles/r√°pidos

¬°ESO ES TODO! Tu cola de rat√≥n estar√° lista para usar.
===============================================
*/